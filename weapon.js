// Generated by CoffeeScript 1.3.3
var Item, Weapon,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Item = require('./item');

Weapon = (function(_super) {

  __extends(Weapon, _super);

  function Weapon(name, description, price, minDamage, maxDamage) {
    Weapon.__super__.constructor.call(this, name, description, price);
    this.setDamages(minDamage, maxDamage);
  }

  Weapon.prototype.setDamages = function(min, max) {
    return this.damage = {
      min: min,
      max: max,
      spread: max - min
    };
  };

  Weapon.prototype.use = function(target) {
    var damage;
    damage = (Math.random() * this.damage.spread) + this.damage.min;
    return target.health -= damage;
  };

  return Weapon;

})(Item);
